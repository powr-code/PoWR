      SUBROUTINE PRIDWL (VELO,GRADI,VDOP,POPNUM,ENTOT,R,RSTAR,OPAL,
     $ EINST,WEIGHT,FNUEC,XLAM,LOW,NUP,ND,NDIM,DELW,LSDWL,OPA,THOMSON,
     $ ADELW,JOBNUM,MODHEAD)
C**********************************************************************
C***   PRINT OUT OF THE LINE EMISSION CONTRIBUTION PER RADIUS
C**********************************************************************

      PARAMETER ( MUNUM = 64 )

      REAL VELO(ND),GRADI(ND),DELW(ND),POPNUM(ND,NDIM),ENTOT(ND),R(ND),
     $ EINST(NDIM,NDIM),WEIGHT(NDIM),OPAL(ND),OPA(ND),THOMSON(ND)
     $ ,ADELW(ND)
      LOGICAL CORE
      CHARACTER MODHEAD*100

      DATA PI / 3.141592654 /
C***  H IN  ERG/SEC
      DATA H / 6.6261965E-27 /
C***  C IN ANGSTROEM
      DATA C / 2.99792456211E+18 /
C***  CONV=1/2HC   CONVERTS A TO B FOR I IN ERG/CM2SECHZ, L IN ANG
      DATA CONV / 2.5170103E-9 /
 
C***  OPTICAL DEPTH WHERE THE CONTINUUM IS DEFINED
      T1=0.66666666666666
 
C***  RT1 = CONTINUUM RADIUS
      TAUC= 0.
      OPAT=OPA(1)
      L=1
C***  DO WHILE (TAUC.LT.T1 .AND. L.LT.ND)
   10 CONTINUE
         L=L+1
         OPAT1=OPAT
         TAUC1=TAUC
         OPAT=OPA(L)
         TAUC=(OPAT+OPAT1)/2.*(R(L-1)-R(L))+TAUC1
      IF ((TAUC .LT. T1) .AND. (L .LT .ND)) GOTO 10
C***  END DO
      RT1=R(L-1)+(R(L)-R(L-1))/(TAUC-TAUC1)*(T1 -TAUC1)
      ENTOT1=ENTOT(L-1)+(ENTOT(L)-ENTOT(L-1))/(TAUC-TAUC1)*(T1 -TAUC1)
      LT1=L

C***  HEADER OUTPUT
      IF (LSDWL.EQ.1.OR.LSDWL.EQ.4)
     $   PRINT 2, MODHEAD,JOBNUM,XLAM,T1,RT1,ALOG10(ENTOT1)
    2 FORMAT (1X,A,20X,'JOB NR.',I3,//,10X,
     $ 'CONTRIBUTION TO THE EQUIVALENT WIDTH AS FUNCTION OF RADIUS',/
     $ 10X,'                    LINE ',F10.2,'A',
     $ 24X,'STAR RADIUS IS DEFINED AT OPTICAL DEPTH TAU-CONT =',F6.2,/,
     $ 10X,58('-'),14X,'I.E. AT R=',1PE10.3,', LOG(ENTOT)=',0PF6.2,//,
     $ 4X,'NR',11X,'R',7X,'TAU-C',7X,'TAU-S',7X,'TAU-P',6X,'TAU-MU',7X,
     $ 'BETAC',2X,'BETA-BETAC',7X,'DW-EM',7X,'DW(R)',7X,'IW(R)',/)
 
C***  INITIALIZATION
      DO 11 L=1,ND
      ADELW(L)=0.0
   11 DELW(L)=0.0
      RL1=R(1)
      DELW1=0.
      RINTW1=0.
      ADELW1=0.
      ENORM=0.0
      TAUC1=0.
      OPAT1=0.
C***  FXLAM IS THE ASTROPHYSICAL FLUX
      HNU=H/XLAM*C
      FXLAM=PI*FNUEC*C/XLAM/XLAM/HNU
C***  XIC = FLUX/PI
      XIC=FNUEC
 
C***  LOOP OVER ALL DEPTH POINTS  --------------------------------------
      DO 1 L=1,ND
      RL=R(L)
      VELOL=VELO(L)
      GRADIL=GRADI(L)
      SIGMAL=RL/VELOL*GRADIL-1.
      OPALL=OPAL(L)
      DRL=(RL1-RL)
      OPAT=OPA(L)
      TAUC=TAUC1+(OPAT+OPAT1)/2.*DRL
      IF (L .LT. LT1) THEN
         XMUT1=SQRT(1.-RT1*RT1/RL/RL)
      ELSE
         XMUT1=0.
      END IF
      TSOBS=OPALL*RL/VELOL*VDOP
      TSOBP=OPALL/GRADIL*VDOP
      DBS=(1.-EXP(-TSOBS))/TSOBS
      DBP=(1.-EXP(-TSOBP))/TSOBP

C***  INTEGRATION OVER MU  **********
      CORE=.FALSE.
      DXMU1=(1.+XMUT1)/(FLOAT(MUNUM)-1.)
      DXMU2=(1.-XMUT1)/(FLOAT(MUNUM)-1.)
      XMUMAX=SQRT(1.-1./RL/RL)
C***  BETA-BETAC ( INTEGRAL -1 TO  MU(T1): BETA(MU) EXP(-TAUCMU) DMU )
      BETA=0.0
      BETAXI=0.0
      XMU=-1.
      TSOBMU1=TSOBS/(1.+SIGMAL)
      DBMUTC1=(1.-EXP(-TSOBMU1))/TSOBMU1
      ETCMU1=EXP(-TAUC)
      DO 21 K=2,MUNUM
      XMU=XMU+DXMU1
      XMU2=XMU*XMU
      TSOBMU=TSOBS/(1.+XMU2*SIGMAL)
      DBMUTC=(1.-EXP(-TSOBMU))/TSOBMU
      BETA=BETA+(DBMUTC1+DBMUTC)/2.*DXMU1
      ETCMU=EXP(-TAUCMU(XMU,L,R,OPA,ND))
      BETAXI=BETAXI+(DBMUTC1*ETCMU1+DBMUTC*ETCMU)/2.*DXMU1
      ETCMU1=ETCMU
   21 DBMUTC1=DBMUTC
C***  BETAC ( INTEGRAL MU(T1) TO +1: BETA(MU) EXP(-TAUCMU) DMU )
      BETAC=0.0
      XMU=XMUT1
      TSOMUT=TSOBS/(1.+XMUT1*XMUT1*SIGMAL)
      DBMUTC1=(1.-EXP(-TSOMUT))/TSOMUT
      ETCMU1=EXP(-TAUCMU(XMU,L,R,OPA,ND))
      DO 22 K=2,MUNUM
      XMU=XMU+DXMU2
      XMU2=XMU*XMU
      TSOBMU=TSOBS/(1.+XMU2*SIGMAL)
      DBMUTC=(1.-EXP(-TSOBMU))/TSOBMU
      BETAC=BETAC+(DBMUTC1+DBMUTC)/2.*DXMU2
      IF (.NOT. CORE) THEN
         IF (XMU .GT. XMUMAX) THEN
C***        LAST STEP FOR INTEGRATION OF BETAXI
            CORE=.TRUE.
            XMU2=XMUMAX*XMUMAX
            TSOBMU=TSOBS/(1.+XMU2*SIGMAL)
            ETCMU=EXP(-TAUCMU(XMUMAX,L,R,OPA,ND))
            DBMUTCX=(1.-EXP(-TSOBMU))/TSOBMU*ETCMU
            BETAXI=BETAXI+(DBMUTC1*ETCMU1+DBMUTCX)/2.*
     *                    (XMUMAX-(XMU-DXMU2))
            GOTO 22
         ENDIF
         ETCMU=EXP(-TAUCMU(XMU,L,R,OPA,ND))
         BETAXI=BETAXI+(DBMUTC1*ETCMU1+DBMUTC*ETCMU)/2.*DXMU2
         ETCMU1=ETCMU
      ENDIF
   22 DBMUTC1=DBMUTC

C***  CORRECT DEFINITIONS OF BETA, BETAC: CASTOR (1970), MNRAS 149, 111
      BETA1C=BETA/2.
      BETAC=BETAC/2.
      BETA=BETA1C+BETAC

C***  CONTRIBUTION IN ANGSTROEM/RSTAR
      XJBETC=BETAC*XIC
      FACT=RL*RL*ENTOT(L)*EINST(NUP,LOW)/FXLAM*RSTAR*EXP(-TAUC)
C***  EMISSION
      DELEM=POPNUM(L,NUP)*BETA1C*FACT
C***  ABSORBTION
      DELAB=CONV*XLAM*XLAM*XLAM*WEIGHT(NUP)*FACT*
     $ (POPNUM(L,LOW)/WEIGHT(LOW)-POPNUM(L,NUP)/WEIGHT(NUP))*XJBETC
      DELWL=DELEM-DELAB
      DELW(L)=DELWL
      RINTW=RINTW1+(DELW1+DELW(L))/2.*DRL
C***  CALCULATION OF XI-HILLIER (1987, APJ SUPPL. SER. 63, 965):
      ADELWL=POPNUM(L,NUP)*ENTOT(L)*RL*RL*RL*BETAXI
      ADELW(L)=ADELWL
C***  NORMALIZATION CONSTANT FOR XI-HILLIER:
C***  INTEGRAL OF XI-HILLIER OVER D(LOG R) IS PROPORTIONAL TO LINE ENERGY
      ENORM=ENORM+(ADELW1/RL1+ADELW(L)/RL)/2.*DRL
      DELW1=DELWL
      RINTW1=RINTW
      ADELW1=ADELWL
      RL1=RL
      TAUC1=TAUC
      OPAT1=OPAT
C***  OUTPUT:
      IF (LSDWL.EQ.1.OR.LSDWL.EQ.4) PRINT 3,
     $   L,RL,TAUC,TSOBS,TSOBP,TSOMUT,BETAC,BETA1C,DELEM,DELW(L),RINTW
    3 FORMAT (I6,1P10E12.3)
    1 CONTINUE
C***  ENDLOOP  ---------------------------------------------------------
 
C**** NORMALIZATION OF "ADELW" (TOTAL LINE EMISSION)
      DO 90 L=1,ND
   90 ADELW(L)=ADELW(L)/ENORM
 
      RETURN
      END
