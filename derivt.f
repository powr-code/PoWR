      SUBROUTINE DERIVT (DM,NRANK,I,RUDLINE,
     $      EN,CRATE,RRATE,EXPFAC,NFEDGE,WCHARM,ND,L,TL,ENLTE,
     $      SLNEW,XJCAPP,FWEIGHT,DOPA,DETA,OPAC,SCNEW,XLAMBDA,NF,
     $      NDIM,N,ELEVEL,EINST,SIGMAKI,
     $      LASTIND,INDLOW,INDNUP,KONTLOW,KONTNUP,LASTKON,DRRATEN,
     $      RDIEL,IONGRND,KODRLOW,LASTKDR)
C*******************************************************************************
C***  DERIVATIVE OF RATE EQ. COEFFICIENTS : 
C***  D(I,M,J):= N(M) * D(RATCO(M,J))/DN(I) - N(J) * D(RATCO(J,M))/DN(I)
C***  DERIV-"T": I=N+2 (TEMPERATURE-DERIVATIVES ONLY)
C*******************************************************************************
 
      DIMENSION EN(NDIM),CRATE(NDIM,NDIM),RRATE(NDIM,NDIM)
      DIMENSION EINST(NDIM,NDIM),ENLTE(NDIM),ELEVEL(NDIM)
      DIMENSION WCHARM(ND,NF),DOPA(NF),DETA(NF),OPAC(NF),SCNEW(NF)
      DIMENSION FWEIGHT(NF),XLAMBDA(NF),XJCAPP(NF),EXPFAC(NF)
      DIMENSION SIGMAKI(NF,LASTKON)
      DIMENSION DM(NRANK,NRANK)
      DIMENSION INDLOW(LASTIND),INDNUP(LASTIND),SLNEW(LASTIND)
      DIMENSION KONTLOW(LASTKON),KONTNUP(LASTKON),NFEDGE(LASTKON)
      DIMENSION KODRLOW(LASTKDR)
      DIMENSION DRRATEN(NDIM),RDIEL(NDIM),IONGRND(NDIM)
      LOGICAL RUDLINE(LASTIND)
 
C***  C1 = H * C / K    ( CM * KELVIN )
      DATA C1 / 1.4388 /
C***  C2 = 2 * H * C    ( H AND C IN CGS UNITS )
      DATA C2 / 3.9724E-16 /
C***  PI8 = 8 * PI
      DATA PI8 / 25.13274123 /

      TLINV = 1. / TL

C***  COMPUTE ELEMENT D(I="T",LOW,NUP)
C***    NOTE: D(I,NUP,LOW = -D(I,LOW,NUP)

C***  BOUND-FREE TRANSITIONS *******************************************
      DO 8 KONT=1,LASTKON

      NUP    = KONTNUP(KONT)
      LOW    = KONTLOW(KONT)

      ENNUP  = EN(NUP)
      ENLOW  = EN(LOW)

      ENLTEUP= ENLTE(NUP)
      ENLTELO= ENLTE(LOW)

      Q      = ENLOW   / ENNUP
      QLTE   = ENLTELO / ENLTEUP

      NFLOW  = NFEDGE(KONT)
      WEDGE  = 1.E8 / XLAMBDA(NFLOW)
 
C***  COLLISIONAL RATES  ..............................................

C***  FIRST TERM: DERIVATIVE OF THE SAHA FACTOR
      DSAHA=(1.5 + C1*WEDGE * TLINV) * TLINV * ENLTEUP/ENLTELO
      DLOWUP=-ENLOW*CRATE(NUP,LOW)*DSAHA
C***  SECOND TERM: DERIVATIVE OF THE CROSS SECTION
C***  WARNING: WE ASSUME HERE THAT C(UP-LOW) GOES WITH 1/T
C***  WHICH IS ONLY EXACTLY CONSISTENT FOR POSITIVE IONS (CF. SUBR. COLLI)
      DCDT=-CRATE(NUP,LOW) * TLINV
      DLOWUP=DLOWUP-DCDT*(ENLOW*ENLTEUP/ENLTELO - ENNUP)
 
C***  RADIATIVE RATES (NET RADIATIVE BRACKETS)  .......................
 
C***  DZDT = DERIVATIVE OF THE NET RAD. BRACKET Z(UP-LOW) TO THE TEMPERATURE
      DZDT = .0

C***  BRANCHING OUTSIDE LOOP (VECTORIZATION!) FOR INNER BOUNDARY
      IF (L .EQ. ND) THEN
      DO 1 K=1,NFLOW
      W=1.E8/XLAMBDA(K)
      W2=W*W
      G = EXPFAC(K) * QLTE
      DGDT = -G * (1.5 + C1*(WEDGE-W) * TLINV) * TLINV
      DJDT = WCHARM(L,K) * (DOPA(K) * SCNEW(K) - DETA(K)) / OPAC(K)
      BRACKET = DGDT * W2 + (DJDT * (Q-G) + DGDT * XJCAPP(K)) / (C2*W)
C***  ADDITIONAL TERM FOR INNER BOUNDARY:
      W3 = W2 * W
      SLUINV = (Q/G - 1.) / (C2*W3)
      BRACKET=BRACKET- 0.5 * SLUINV * DBNUEDT(XLAMBDA(K),TL)
      DZDT = DZDT + SIGMAKI(K,KONT) * FWEIGHT(K) * BRACKET
    1 CONTINUE

      ELSE
      DO 11 K=1, NFLOW
      W = 1.E8 / XLAMBDA(K)
      W2= W * W
      G = EXPFAC(K) * QLTE
      DGDT = -G * (1.5 + C1*(WEDGE-W) * TLINV) * TLINV
      DJDT = WCHARM(L,K) * (DOPA(K) * SCNEW(K) - DETA(K)) / OPAC(K)
      BRACKET = DGDT * W2 + (DJDT * (Q-G) + DGDT * XJCAPP(K)) / (C2*W)
      DZDT = DZDT + SIGMAKI(K,KONT) * FWEIGHT(K) * BRACKET
   11 CONTINUE
      ENDIF

      DLOWUP = PI8*ENNUP*DZDT + DLOWUP

C***  ADD UP D(I,LOW,NUP) INTO THE MATRIX M (FORTRAN NAME: DM)  .........
      DM(I,NUP)=DM(I,NUP)+DLOWUP
      DM(I,LOW)=DM(I,LOW)-DLOWUP

    8 CONTINUE


C***  D-R / AUTOIONIZATION TRANSITIONS  ********************************
      DO 18 KDR=1,LASTKDR

      LOW=KODRLOW(KDR)
      NUP=IONGRND(LOW)

C***  NOTE: DRRATEN IS PRECALCULATED IN SUBR. RADNET
C***        ( DRRATEN(LOW) = SUM[ DRUPLOW(J,LOW) * EAUTO(J) ] OVER J )
      DLOWUP =  EN(NUP) *
     *          (-1.5 * RDIEL(LOW) + C1 * TLINV * DRRATEN(LOW)) * TLINV

C***  ADD UP D(I,LOW,NUP) INTO THE MATRIX M (FORTRAN NAME: DM)
      DM(I,NUP)=DM(I,NUP)+DLOWUP
      DM(I,LOW)=DM(I,LOW)-DLOWUP

   18 CONTINUE

 
C***  BOUND-BOUND TRANSITIONS  *********************************************
      DO 7 IND=1,LASTIND

      NUP   = INDNUP(IND)
      LOW   = INDLOW(IND)

      ENNUP = EN(NUP)
      ENLOW = EN(LOW)

      ENLTEUP = ENLTE(NUP)
      ENLTELO = ENLTE(LOW)

      SLNEWI = SLNEW(IND)
      W = ELEVEL(NUP)-ELEVEL(LOW)
 
C***  COLLISIONAL RATES..................................................
C***  FIRST TERM: DERIVATIVE OF THE BOLTZMANN FACTOR
      DBOLTZ=(ENLTEUP/ENLTELO) * C1*W * TLINV * TLINV
      DLOWUP=-ENLOW * CRATE(NUP,LOW) * DBOLTZ
C***  SECOND TERM: DERIVATIVE OF THE CROSS SECTION
C***  WARNING: WE ASSUME HERE THAT C(UP-LOW) GOES WITH T**(-1/2)
C***  WHICH IS ONLY EXACTLY CONSISTENT FOR POSITIVE IONS (CF. SUBR. COLLI)
      DCDT=-CRATE(NUP,LOW) * 0.5 * TLINV
      DLOWUP=DLOWUP-DCDT* (ENLOW*ENLTEUP/ENLTELO - ENNUP)

C***  RADIATIVE RATES  ..................................................
C***  NO CONTRIBUTIONS ARISE FROM THE BOUND-BOUND RADIATIVE TERMS,
C***  EXCEPT FOR THE INNER BOUNDARY WITH TEMPERATURE CORRECTION:
C***  - NOTE: THIS TERM IS THE SAME FOR NRB'S AS FOR THE USUAL RATES -
      IF (L .EQ. ND) THEN
C***     RUDIMENTAL LINES: ZERO DERIVATIVE
         IF (.NOT. RUDLINE(IND)) THEN
C***        LASER LINES: ZERO DERIVATIVE (DIVIDE CHECK ERROR!)
            IF (SLNEWI .GT. .0) THEN
               XLAM=1.E8/W
               DLOWUP=DLOWUP -
     -         0.5*ENNUP*EINST(NUP,LOW)*DBNUEDT(XLAM,TL)/SLNEWI
               ENDIF
            ENDIF
         ENDIF

C***  ADD UP D(I,LOW,NUP) INTO THE MATRIX M (FORTRAN NAME: DM)
      DM(I,NUP)=DM(I,NUP)+DLOWUP
      DM(I,LOW)=DM(I,LOW)-DLOWUP

    7 CONTINUE

      RETURN
      END
