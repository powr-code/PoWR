      SUBROUTINE DECNOT (LAST,MODHIST,KARTE,NOTEMP,THISPRG)
C**********************************************************************
C***  IN CASE OF AN 'CONDITIONAL' NOTEMP-OPTION, THE OPTIONAL LIMIT
C***  FOR THE CORRECTION 'CORLIM' IS DECODED AND COMPARED TO THE
C***  LAST CORRECTION FOUND IN THE MODEL HISTORY (CORLAST)
C***  FORMAT OF THE INPUT OPTION:
C***  N0 TEMPERATURE CORRECTIONS WHILE COR. .GT.__________
C***  1234567890123456789012345678901234567890123456789012
C***  0000000001111111111222222222233333333334444444444555
C**********************************************************************

      IMPLICIT NONE

      INTEGER, INTENT(IN) :: LAST
      CHARACTER(LAST*8), INTENT(IN) :: MODHIST
      CHARACTER(80), INTENT(IN) :: KARTE
      CHARACTER(8), INTENT(IN) :: THISPRG
      LOGICAL, INTENT(OUT) :: NOTEMP
      
      CHARACTER(20) :: ACTPAR
      REAL :: CORLIM, CORLIM2, CORLAST
      INTEGER :: NPAR, I, J, IWRC, LASTCH, IEQUAL
      LOGICAL WRCONTFOUND, CORFOUND


C***  READ THE SPECIFIED LIMIT FROM THE INPUT CARD:
      CALL SARGC (KARTE, NPAR)
      CALL SARGV (KARTE, 7, ACTPAR)
      READ (ACTPAR, '(F20.0)') CORLIM
      IF (NPAR > 7) THEN
        CALL SARGV (KARTE, 8, ACTPAR)
        READ (ACTPAR, '(F20.0)') CORLIM2
        IF (CORLIM2 < CORLIM) THEN
          CORLIM2 = CORLIM
          WRITE (0,*) 'WARNING FROM SUBR. DECNOT'
          WRITE (0,*) 'SECOND LIMIT IS SMALLER THEN FIRST LMIT'
          WRITE (0,*) 'SECOND LIMIT IS IGNORED'
          WRITE (0,'(1X,2A)') 'KARTE=', KARTE( :70)
        ENDIF
      ELSE
        CORLIM2 = CORLIM
      ENDIF

c      READ (KARTE,3) CORLIM
c    3 FORMAT (42X,F10.0)

C***  LAST WRITTEN CHARACTER OF MODEL HISTORY
      LASTCH=LAST*8

C***  IF THIS PROGRAM IS NOT 'WRCONT': 
C***    GO BACK TO THE LAST WRCONT ENTRY
      WRCONTFOUND = .FALSE.

      IF (THISPRG( :6) /= 'WRCONT') THEN
         DO I=LASTCH,10,-1
           IWRC=I
           IF (MODHIST(I-5:I) == 'WRCONT') THEN
             WRCONTFOUND = .TRUE.
             LASTCH=IWRC
             EXIT
           ENDIF
         ENDDO
      ELSE
        WRCONTFOUND = .TRUE.
      ENDIF

      !exit subroutine if no WRCONT was found
      IF (.NOT. WRCONTFOUND) RETURN

C***  FIND LAST OCCURRENCE OF STRING 'COR.=' IN THE MODEL HISTORY
      CORFOUND = .FALSE.
      DO I=LASTCH,10,-1
        IEQUAL=I
        IF (MODHIST(I-4:I) == 'COR.=') THEN
          CORFOUND = .TRUE.
          EXIT
        ENDIF
      ENDDO

      !exit subroutine if no 'COR.=' was found or corrections are undefined
      IF ((.NOT. CORFOUND) .OR. 
     >     MODHIST(IEQUAL+1:IEQUAL+6) == 'UNDEF.') RETURN

C***  READ LAST CORRECTION:
      READ (MODHIST(IEQUAL+1:IEQUAL+8),4) CORLAST
    4 FORMAT (F8.0)

C***  NEW OPTION
C***  NOTEMP, IF CORLAST >  CORLIM2
C***  TEMP,   IF CORLAST <  CORLIM
C***  NO CHANGE, IF CORLIM <= CORLAST <= CORLIM2
      IF (CORLAST <= CORLIM) THEN
        NOTEMP = .FALSE.
      ELSEIF (CORLAST <= CORLIM2) THEN
C***  FIND LAST OCCURRENCE OF STRING 'COR.=' IN THE MODEL HISTORY
        LASTCH=LAST*8
        CORFOUND = .FALSE.
        DO I=LASTCH,10,-1
          IEQUAL=I
          IF (MODHIST(I-4:I) == 'COR.=') THEN
            CORFOUND = .TRUE.
            EXIT
          ENDIF
        ENDDO
        IF (.NOT. CORFOUND) RETURN
C***  TRY TO FIND NEXT STRING 'TC='
        NOTEMP = .TRUE.
        DO J=I, LASTCH-3
          IF (MODHIST(J:J+2) == 'TC=') THEN
            NOTEMP = .FALSE.
            EXIT
          ENDIF
        ENDDO
      ELSE
        NOTEMP = .TRUE.
      ENDIF

C!!!  OLD PATH
C***  ALLOW TEMPERATURE CORRECTIONS, IF CORLAST .LT. CORLIM
C!!!      IF (CORLAST .LT. CORLIM) NOTEMP = .FALSE.

      RETURN
      END
