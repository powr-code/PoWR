      SUBROUTINE DMOPEN (IADR16, ND, MODHEAD, JOBNUM, NRANK, ITBR)
C**********************************************************************
C***  BROYDEN METHOD: 
C***   OPEN THE FILE "DMFILE" = fort.16 AND
C***   CHECK WHETHER THESE DATA EXIST AND BELONG TO THE PRESENT MODEL
C***  -  CALLED FROM: LINPOP
C**********************************************************************

      IMPLICIT NONE

      INTEGER, INTENT(IN) :: ND, JOBNUM, NRANK
      INTEGER, INTENT(INOUT) :: ITBR

      CHARACTER(100) :: MODHEAD, MODEL
      INTEGER, DIMENSION(1) :: IADR16

      INTEGER :: IERR, LASTUPD, NRANKOLD, IDUMMY

      INTEGER, PARAMETER :: hCPR = 0        !write to wruniqX.cpr (stderr)
      INTEGER, PARAMETER :: hOUT = 6        !write to wruniqX.out (stdout)
      INTEGER, PARAMETER :: hDMFILE = 16    !DMFILE file (fort.17)

      CALL OPENMS (hDMFILE, IADR16, 2*ND+8, 1, IERR)

C***  IF NO READING REQUESTED (ITBR > 1), THE FILE IS ONLY WRITTEN
      IF (ITBR .GT. 1) GOTO 2

C***  READ MODEL HEADER ON "DMFILE"
      IERR=1
      CALL READMS (hDMFILE, MODEL, 13, 'MODEL   ', IERR)
      IF (IERR .LT. 0  .AND.  IERR. NE. -10) THEN
            CALL REMARK ('DMOPEN: ERROR WHEN READING DMFILE')
            STOP 'ERROR'
            ENDIF

C***  FILE NOT EXISTING 
      IF (IERR .EQ. -10) THEN
         WRITE(hOUT,*) 'STEAL> DMOPEN: DMFILE NOT YET EXISTING'
         GOTO 10
         ENDIF

C***  DMFILE BELONGS TO A DIFFERENT MODEL
      IF (MODEL .NE. MODHEAD) THEN
         PRINT *, 'STEAL> DMOPEN: DMFILE BELONGS TO A DIFFERENT MODEL'
         GOTO 1
         ENDIF

C***  CHECK JOBNUM OF LAST UPDATE
      CALL READMS (hDMFILE, LASTUPD, 1, 'LASTUPD ', IERR)

      IF (LASTUPD .GE. JOBNUM) THEN
        WRITE(hOUT,*) 'STEAL> DMOPEN: DMFILE YOUNGER THAN PRESENT MODEL'
        GOTO 1
        ENDIF

      IF (LASTUPD  .LT.  JOBNUM-5) THEN
         WRITE(hOUT,*) 'STEAL> DMOPEN: DMFILE OLDER THAN 5 JOBS'
         GOTO 1
         ENDIF

C***  CHECK WHETHER NRANK IS UNCHANGED (TEMPERATURE CORRECTIONS!)
      CALL READMS (hDMFILE, NRANKOLD, 1, 'NRANK   ', IERR)
      IF (NRANKOLD .NE. NRANK) THEN
         WRITE(hOUT,*) 'STEAL> DMOPEN: DM-MATRIX HAS CHANGED ITS RANK'
         GOTO 1
         ENDIF

C***  REGULAR EXIT:
      GOTO 9


C***  BRANCH FOR BAD DMFILE  ------------------------------
    1 CONTINUE
      CALL CLOSMS (hDMFILE, IERR)
C      CLOSE(hDMFILE, STATUS='DELETE')
C      CALL OPENMS (hDMFILE, IADR16, 2*ND+8, 1, IERR)
      CALL OPENEXMS (hDMFILE, IADR16, 2*ND+8, 1, 'REPLACE', IERR)

   10 ITBR = 2
      WRITE(hOUT,*)
     >      'STEAL> DMOPEN: -->  NEW DERIVATIVE MATRIX CALCULATED'

C***  WRITE NEW HEADER
    2 CONTINUE
      CALL WRITMS (hDMFILE, MODHEAD, 13, 'MODEL   ', -1, IDUMMY, IERR)
      CALL WRITMS (hDMFILE, NRANK  ,  1, 'NRANK   ', -1, IDUMMY, IERR)

C***  JOBNUMBER IS ALWAYS UPDATED
    9 CONTINUE
      CALL WRITMS (hDMFILE, JOBNUM ,  1, 'LASTUPD ', -1, IDUMMY, IERR)

      RETURN
      END
